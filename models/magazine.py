# -*- coding: utf-8 -*-

from odoo import models, fields, api
from odoo.modules.module import get_module_resource
import base64

class MyMagazine(models.Model):
    _name = 'mymagazine'
    _inherit = 'mail.thread'
    _description='Une magazine qui fait des publicité chaque mois'

    title = fields.Char(string='Title',required=True,help='This is the name of the magazine ',index=True)
    image=fields.Image(string="Cover",max_width=200,max_height=350,help="This is the cover of the book")
    writer= fields.Char('Ecrivain' ,required=True)
    designer= fields.Char('Designeur')
    total_price=fields.Float("Total Prix ",readonly=True,compute='total')
    number_pages=fields.Integer("Nombre Total des Pages", required=True,default=12)
    price1=fields.Float("Prix de la Premiere Page",required=True,default=15)
    price2=fields.Float("Prix de la Page au Milieu",required=True,default=10)
    price3=fields.Float("Prix de la dernière Page",required=True,default=15)
    pages=fields.One2many(comodel_name='product.template',inverse_name='magazine')
    # statut = fields.Selection([('s1','mpi'),('s2','2eme'),('s3','3eme'),('s4','4eme'),('s5','5eme')], default='s1', clickable=True)

    def name_get(self):
        result = []
        for book in self:
            alias = book.title.upper()  +" wrote by " + book.writer + " --> " + str(book.number_pages)+" pages"
            result.append((book.id,alias))
        return result

    def total(self):
        for mag in self:
            mag.total_price = mag.price1 + mag.price3 + mag.price2 * (mag.number_pages - 2)
    # def next_state(self):
    #     if self.statut=='s1':
    #         return self.write({'statut':'s2'})
    #     elif self.statut=='s2':
    #         return self.write({'statut':'s3'})
    #     elif self.statut=='s3':
    #         return self.write({'statut':'s4'})
    #     elif self.statut=='s4':
    #         return self.write({'statut':'s5'})
    #     else:
    #         return {'warning': {'title': 'Warning',
    #                             'message': 'Where are you going , you finished your study...'}}

    @api.onchange('number_pages')
    def warning(self):
        if ((self.number_pages) < 0):
            return {'warning': {'title': 'Warning',
                                'message': 'The number of pages can not be negatif'}}
        elif ((self.number_pages) <3 and (self.number_pages)>0 ):
            return {'warning': {'title': 'Warning',
                                'message': 'The number of pages is too few'}}
    # @api.constrains('registration_date','birthday')
    # def date_error(self):
    #     if(self.registration_date <= self.birthday):
    #         raise ValueError('Registration date can not be before Birthday!!!')


    @api.model
    def create(self, values):
        res =super(MyMagazine, self).create(values);
        #page1
        self.create_page("Première page",values['price1'],1,"page1.jpg",12,res)
        # page milieu
        for i in range(2,values['number_pages']-1):
            self.create_page("Page "+str(i), values['price2'],i, "page2.jpg", 12,res)
            print("page"+str(i))
        # page finale
        self.create_page("Dernière page",values['price3'],values['number_pages'],"page3.jpg",12,res)


        return res;

    def create_page(self,pre,price,index,image,qty,magazine):
        name=pre+" de "+str(magazine.title)
        ref="PAGE "+str(index)
        map_vals = {'name': name, 'color': 5, 'type': "product", 'list_price': price,
                    'default_code':ref, 'image_1920': self.get_image(image),'magazine':magazine.id}
        page = self.env['product.template'].create(map_vals)
        warehouse = self.env['stock.warehouse'].search([('company_id', '=', self.env.company.id)], limit=1)
        self.env['stock.quant'].with_context(inventory_mode=True).create({
            'product_id': page.id,
            'location_id': warehouse.lot_stock_id.id,
            'inventory_quantity': qty,
        })

    def get_image(self,name):
        with open(get_module_resource('magasine','static/src/img',name),'rb') as f:
            return base64.b64encode(f.read())




        # {'name': {'type': 'char', 'change_default': False, 'company_dependent': False, 'depends': (), 'manual': False,
        #           'readonly': False, 'required': True, 'searchable': True, 'sortable': True, 'store': True,
        #           'string': 'Name', 'translate': True, 'trim': True},
        #  'sequence': {'type': 'integer', 'change_default': False, 'company_dependent': False, 'depends': (),
        #               'group_operator': 'sum', 'help': 'Gives the sequence order when displaying a product list',
        #               'manual': False, 'readonly': False, 'required': False, 'searchable': True, 'sortable': True,
        #               'store': True, 'string': 'Sequence'},
        #  'description': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                  'manual': False, 'readonly': False, 'required': False, 'searchable': True, 'sortable': True,
        #                  'store': True, 'string': 'Description', 'translate': True},
        #  'description_purchase': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                           'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                           'sortable': True, 'store': True, 'string': 'Purchase Description', 'translate': True},
        #  'description_sale': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                       'help': 'A description of the Product that you want to communicate to your customers. This description will be copied to every Sales Order, Delivery Order and Customer Invoice/Credit Note',
        #                       'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                       'sortable': True, 'store': True, 'string': 'Sales Description', 'translate': True},
        #  'categ_id': {'type': 'many2one', 'change_default': True, 'company_dependent': False, 'context': {},
        #               'depends': (), 'domain': [], 'help': 'Select category for the current product', 'manual': False,
        #               'readonly': False, 'relation': 'product.category', 'required': True, 'searchable': True,
        #               'sortable': True, 'store': True, 'string': 'Product Category'},
        #  'currency_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                  'depends': ('company_id',), 'domain': [], 'manual': False, 'readonly': True,
        #                  'relation': 'res.currency', 'required': False, 'searchable': False, 'sortable': False,
        #                  'store': False, 'string': 'Currency'},
        #  'cost_currency_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                       'depends': (), 'domain': [], 'manual': False, 'readonly': True,
        #                       'relation': 'res.currency', 'required': False, 'searchable': False, 'sortable': False,
        #                       'store': False, 'string': 'Cost Currency'},
        #  'price': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (),
        #            'digits': (16, 2), 'group_operator': 'sum', 'manual': False, 'readonly': False, 'required': False,
        #            'searchable': False, 'sortable': False, 'store': False, 'string': 'Price'},
        #  'list_price': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                 'digits': (16, 2), 'group_operator': 'sum',
        #                 'help': 'Price at which the product is sold to customers.', 'manual': False, 'readonly': False,
        #                 'required': False, 'searchable': True, 'sortable': True, 'store': True,
        #                 'string': 'Sales Price'},
        #  'lst_price': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': ('list_price',),
        #                'digits': (16, 2), 'group_operator': 'sum',
        #                'help': 'Price at which the product is sold to customers.', 'manual': False, 'readonly': False,
        #                'related': ('list_price',), 'required': False, 'searchable': True, 'sortable': False,
        #                'store': False, 'string': 'Public Price'},
        #  'standard_price': {'type': 'float', 'change_default': False, 'company_dependent': False,
        #                     'depends': ('product_variant_ids', 'product_variant_ids.standard_price'), 'digits': (16, 2),
        #                     'group_operator': 'sum', 'groups': 'base.group_user',
        #                     'help': 'In Standard Price & AVCO: value of the product (automatically computed in AVCO).\n        In FIFO: value of the last unit that left the stock (automatically computed).\n        Used to value the product when the purchase cost is not known (e.g. inventory adjustment).\n        Used to compute margins on sale orders.',
        #                     'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                     'sortable': False, 'store': False, 'string': 'Cost'},
        #  'volume': {'type': 'float', 'change_default': False, 'company_dependent': False,
        #             'depends': ('product_variant_ids', 'product_variant_ids.volume'), 'digits': (16, 2),
        #             'group_operator': 'sum', 'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #             'sortable': True, 'store': True, 'string': 'Volume'},
        #  'volume_uom_name': {'type': 'char', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                      'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                      'sortable': False, 'store': False, 'string': 'Volume unit of measure label',
        #                      'translate': False, 'trim': True},
        #  'weight': {'type': 'float', 'change_default': False, 'company_dependent': False,
        #             'depends': ('product_variant_ids', 'product_variant_ids.weight'), 'digits': (16, 2),
        #             'group_operator': 'sum', 'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #             'sortable': True, 'store': True, 'string': 'Weight'},
        #  'weight_uom_name': {'type': 'char', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                      'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                      'sortable': False, 'store': False, 'string': 'Weight unit of measure label',
        #                      'translate': False, 'trim': True},
        #  'sale_ok': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #              'manual': False, 'readonly': False, 'required': False, 'searchable': True, 'sortable': True,
        #              'store': True, 'string': 'Can be Sold'},
        #  'purchase_ok': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                  'manual': False, 'readonly': False, 'required': False, 'searchable': True, 'sortable': True,
        #                  'store': True, 'string': 'Can be Purchased'},
        #  'pricelist_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                   'depends': (), 'domain': [],
        #                   'help': 'Technical field. Used for searching on pricelists, not stored in database.',
        #                   'manual': False, 'readonly': False, 'relation': 'product.pricelist', 'required': False,
        #                   'searchable': False, 'sortable': False, 'store': False, 'string': 'Pricelist'},
        #  'uom_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #             'depends': (), 'domain': [], 'help': 'Default unit of measure used for all stock operations.',
        #             'manual': False, 'readonly': False, 'relation': 'uom.uom', 'required': True, 'searchable': True,
        #             'sortable': True, 'store': True, 'string': 'Unit of Measure'},
        #  'uom_name': {'type': 'char', 'change_default': False, 'company_dependent': False, 'depends': ('uom_id.name',),
        #               'manual': False, 'readonly': True, 'related': ('uom_id', 'name'), 'required': False,
        #               'searchable': True, 'sortable': False, 'store': False, 'string': 'Unit of Measure Name',
        #               'translate': True, 'trim': True},
        #  'uom_po_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                'depends': (), 'domain': [],
        #                'help': 'Default unit of measure used for purchase orders. It must be in the same category as the default unit of measure.',
        #                'manual': False, 'readonly': False, 'relation': 'uom.uom', 'required': True, 'searchable': True,
        #                'sortable': True, 'store': True, 'string': 'Purchase Unit of Measure'},
        #  'company_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                 'depends': (), 'domain': [], 'manual': False, 'readonly': False, 'relation': 'res.company',
        #                 'required': False, 'searchable': True, 'sortable': True, 'store': True, 'string': 'Company'},
        #  'packaging_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                    'depends': ('product_variant_ids', 'product_variant_ids.packaging_ids'), 'domain': [],
        #                    'help': 'Gives the different ways to package the same product.', 'manual': False,
        #                    'readonly': False, 'relation': 'product.packaging', 'required': False, 'searchable': False,
        #                    'sortable': False, 'store': False, 'string': 'Product Packages'},
        #  'seller_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                 'depends': (), 'domain': [], 'help': 'Define vendor pricelists.', 'manual': False,
        #                 'readonly': False, 'relation': 'product.supplierinfo', 'relation_field': 'product_tmpl_id',
        #                 'required': False, 'searchable': True, 'sortable': False, 'store': True, 'string': 'Vendors'},
        #  'variant_seller_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                         'depends': (), 'domain': [], 'manual': False, 'readonly': False,
        #                         'relation': 'product.supplierinfo', 'relation_field': 'product_tmpl_id',
        #                         'required': False, 'searchable': True, 'sortable': False, 'store': True,
        #                         'string': 'Variant Seller'},
        #  'active': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #             'help': 'If unchecked, it will allow you to hide the product without removing it.', 'manual': False,
        #             'readonly': False, 'required': False, 'searchable': True, 'sortable': True, 'store': True,
        #             'string': 'Active'},
        #  'color': {'type': 'integer', 'change_default': False, 'company_dependent': False, 'depends': (),
        #            'group_operator': 'sum', 'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #            'sortable': True, 'store': True, 'string': 'Color Index'},
        #  'is_product_variant': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                         'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                         'sortable': False, 'store': False, 'string': 'Is a product variant'},
        #  'attribute_line_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                         'depends': (), 'domain': [], 'manual': False, 'readonly': False,
        #                         'relation': 'product.template.attribute.line', 'relation_field': 'product_tmpl_id',
        #                         'required': False, 'searchable': True, 'sortable': False, 'store': True,
        #                         'string': 'Product Attributes'},
        #  'valid_product_template_attribute_line_ids': {'type': 'many2many', 'change_default': False,
        #                                                'company_dependent': False, 'context': {},
        #                                                'depends': ('attribute_line_ids.value_ids',), 'domain': [],
        #                                                'help': 'Technical compute', 'manual': False, 'readonly': True,
        #                                                'relation': 'product.template.attribute.line', 'required': False,
        #                                                'searchable': False, 'sortable': False, 'store': False,
        #                                                'string': 'Valid Product Attribute Lines'},
        #  'product_variant_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                          'depends': (), 'domain': [], 'manual': False, 'readonly': False,
        #                          'relation': 'product.product', 'relation_field': 'product_tmpl_id', 'required': True,
        #                          'searchable': True, 'sortable': False, 'store': True, 'string': 'Products'},
        #  'product_variant_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                         'depends': ('product_variant_ids',), 'domain': [], 'manual': False, 'readonly': True,
        #                         'relation': 'product.product', 'required': False, 'searchable': False,
        #                         'sortable': False, 'store': False, 'string': 'Product'},
        #  'product_variant_count': {'type': 'integer', 'change_default': False, 'company_dependent': False,
        #                            'depends': ('product_variant_ids.product_tmpl_id',), 'group_operator': 'sum',
        #                            'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                            'sortable': False, 'store': False, 'string': '# Product Variants'},
        #  'barcode': {'type': 'char', 'change_default': False, 'company_dependent': False,
        #              'depends': ('product_variant_ids.barcode',), 'manual': False, 'readonly': False, 'required': False,
        #              'searchable': True, 'sortable': False, 'store': False, 'string': 'Barcode', 'translate': False,
        #              'trim': True},
        #  'default_code': {'type': 'char', 'change_default': False, 'company_dependent': False,
        #                   'depends': ('product_variant_ids', 'product_variant_ids.default_code'), 'manual': False,
        #                   'readonly': False, 'required': False, 'searchable': True, 'sortable': True, 'store': True,
        #                   'string': 'Internal Reference', 'translate': False, 'trim': True},
        #  'pricelist_item_count': {'type': 'integer', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                           'group_operator': 'sum', 'manual': False, 'readonly': True, 'required': False,
        #                           'searchable': False, 'sortable': False, 'store': False,
        #                           'string': 'Number of price rules'},
        #  'can_image_1024_be_zoomed': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                               'depends': ('image_1920', 'image_1024'), 'manual': False, 'readonly': True,
        #                               'required': False, 'searchable': True, 'sortable': True, 'store': True,
        #                               'string': 'Can Image 1024 be zoomed'},
        #  'has_configurable_attributes': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                                  'depends': ('attribute_line_ids', 'attribute_line_ids.value_ids',
        #                                              'attribute_line_ids.attribute_id.create_variant'), 'manual': False,
        #                                  'readonly': True, 'required': False, 'searchable': True, 'sortable': True,
        #                                  'store': True, 'string': 'Is a configurable product'},
        #  'taxes_id': {'type': 'many2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #               'depends': ('taxes_id.type_tax_use',), 'domain': [('type_tax_use', '=', 'sale')],
        #               'help': 'Default taxes used when selling the product.', 'manual': False, 'readonly': False,
        #               'relation': 'account.tax', 'required': False, 'searchable': True, 'sortable': False,
        #               'store': True, 'string': 'Customer Taxes'},
        #  'supplier_taxes_id': {'type': 'many2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                        'depends': ('supplier_taxes_id.type_tax_use',),
        #                        'domain': [('type_tax_use', '=', 'purchase')],
        #                        'help': 'Default taxes used when buying the product.', 'manual': False,
        #                        'readonly': False, 'relation': 'account.tax', 'required': False, 'searchable': True,
        #                        'sortable': False, 'store': True, 'string': 'Vendor Taxes'},
        #  'property_account_income_id': {'type': 'many2one', 'change_default': False, 'company_dependent': True,
        #                                 'context': {}, 'depends': (),
        #                                 'domain': "['&', '&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id), ('is_off_balance', '=', False)]",
        #                                 'help': 'Keep this field empty to use the default value from the product category.',
        #                                 'manual': False, 'readonly': False, 'relation': 'account.account',
        #                                 'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                                 'string': 'Income Account'},
        #  'property_account_expense_id': {'type': 'many2one', 'change_default': False, 'company_dependent': True,
        #                                  'context': {}, 'depends': (),
        #                                  'domain': "['&', '&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id), ('is_off_balance', '=', False)]",
        #                                  'help': 'Keep this field empty to use the default value from the product category. If anglo-saxon accounting with automated valuation method is configured, the expense account on the product category will be used.',
        #                                  'manual': False, 'readonly': False, 'relation': 'account.account',
        #                                  'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                                  'string': 'Expense Account'},
        #  'responsible_id': {'type': 'many2one', 'change_default': False, 'company_dependent': True, 'context': {},
        #                     'depends': (), 'domain': "[('company_ids', 'in', allowed_company_ids[0])]",
        #                     'help': 'This user will be responsible of the next activities related to logistic operations for this product.',
        #                     'manual': False, 'readonly': False, 'relation': 'res.users', 'required': False,
        #                     'searchable': True, 'sortable': False, 'store': False, 'string': 'Responsible'},
        #  'type': {'type': 'selection', 'change_default': False, 'company_dependent': False, 'depends': (),
        #           'help': 'A storable product is a product for which you manage stock. The Inventory app has to be installed.\nA consumable product is a product for which stock is not managed.\nA service is a non-material product you provide.',
        #           'manual': False, 'readonly': False, 'required': True, 'searchable': True,
        #           'selection': [('consu', 'Consumable'), ('service', 'Service'), ('product', 'Storable Product')],
        #           'sortable': True, 'store': True, 'string': 'Product Type'},
        #  'property_stock_production': {'type': 'many2one', 'change_default': False, 'company_dependent': True,
        #                                'context': {}, 'depends': (),
        #                                'domain': "[('usage', '=', 'production'), '|', ('company_id', '=', False), ('company_id', '=', allowed_company_ids[0])]",
        #                                'help': 'This stock location will be used, instead of the default one, as the source location for stock moves generated by manufacturing orders.',
        #                                'manual': False, 'readonly': False, 'relation': 'stock.location',
        #                                'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                                'string': 'Production Location'},
        #  'property_stock_inventory': {'type': 'many2one', 'change_default': False, 'company_dependent': True,
        #                               'context': {}, 'depends': (),
        #                               'domain': "[('usage', '=', 'inventory'), '|', ('company_id', '=', False), ('company_id', '=', allowed_company_ids[0])]",
        #                               'help': 'This stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory.',
        #                               'manual': False, 'readonly': False, 'relation': 'stock.location',
        #                               'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                               'string': 'Inventory Location'},
        #  'sale_delay': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                 'group_operator': 'sum',
        #                 'help': "Delivery lead time, in days. It's the number of days, promised to the customer, between the confirmation of the sales order and the delivery.",
        #                 'manual': False, 'readonly': False, 'required': False, 'searchable': True, 'sortable': True,
        #                 'store': True, 'string': 'Customer Lead Time'},
        #  'tracking': {'type': 'selection', 'change_default': False, 'company_dependent': False, 'depends': (),
        #               'help': 'Ensure the traceability of a storable product in your warehouse.', 'manual': False,
        #               'readonly': False, 'required': True, 'searchable': True,
        #               'selection': [('serial', 'By Unique Serial Number'), ('lot', 'By Lots'), ('none', 'No Tracking')],
        #               'sortable': True, 'store': True, 'string': 'Tracking'},
        #  'description_picking': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                          'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                          'sortable': True, 'store': True, 'string': 'Description on Picking',
        #                          'translate': True},
        #  'description_pickingout': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                             'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                             'sortable': True, 'store': True, 'string': 'Description on Delivery Orders',
        #                             'translate': True},
        #  'description_pickingin': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                            'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                            'sortable': True, 'store': True, 'string': 'Description on Receptions',
        #                            'translate': True},
        #  'qty_available': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (
        #  'product_variant_ids', 'product_variant_ids.stock_move_ids.product_qty',
        #  'product_variant_ids.stock_move_ids.state'), 'digits': (16, 2), 'group_operator': 'sum', 'manual': False,
        #                    'readonly': True, 'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                    'string': 'Quantity On Hand'},
        #  'virtual_available': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (
        #  'product_variant_ids', 'product_variant_ids.stock_move_ids.product_qty',
        #  'product_variant_ids.stock_move_ids.state'), 'digits': (16, 2), 'group_operator': 'sum', 'manual': False,
        #                        'readonly': True, 'required': False, 'searchable': True, 'sortable': False,
        #                        'store': False, 'string': 'Forecasted Quantity'},
        #  'incoming_qty': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (
        #  'product_variant_ids', 'product_variant_ids.stock_move_ids.product_qty',
        #  'product_variant_ids.stock_move_ids.state'), 'digits': (16, 2), 'group_operator': 'sum', 'manual': False,
        #                   'readonly': True, 'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                   'string': 'Incoming'},
        #  'outgoing_qty': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (
        #  'product_variant_ids', 'product_variant_ids.stock_move_ids.product_qty',
        #  'product_variant_ids.stock_move_ids.state'), 'digits': (16, 2), 'group_operator': 'sum', 'manual': False,
        #                   'readonly': True, 'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                   'string': 'Outgoing'},
        #  'location_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                  'depends': (), 'domain': [], 'manual': False, 'readonly': False, 'relation': 'stock.location',
        #                  'required': False, 'searchable': False, 'sortable': False, 'store': False,
        #                  'string': 'Location'},
        #  'warehouse_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                   'depends': (), 'domain': [], 'manual': False, 'readonly': False,
        #                   'relation': 'stock.warehouse', 'required': False, 'searchable': False, 'sortable': False,
        #                   'store': False, 'string': 'Warehouse'},
        #  'has_available_route_ids': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                              'depends': ('type',), 'manual': False, 'readonly': True, 'required': False,
        #                              'searchable': False, 'sortable': False, 'store': False,
        #                              'string': 'Routes can be selected on this product'},
        #  'route_ids': {'type': 'many2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                'depends': ('route_ids.product_selectable',), 'domain': [('product_selectable', '=', True)],
        #                'help': 'Depending on the modules installed, this will allow you to define the route of the product: whether it will be bought, manufactured, replenished on order, etc.',
        #                'manual': False, 'readonly': False, 'relation': 'stock.location.route', 'required': False,
        #                'searchable': True, 'sortable': False, 'store': True, 'string': 'Routes'},
        #  'nbr_reordering_rules': {'type': 'integer', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                           'group_operator': 'sum', 'manual': False, 'readonly': True, 'required': False,
        #                           'searchable': False, 'sortable': False, 'store': False, 'string': 'Reordering Rules'},
        #  'reordering_min_qty': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                         'group_operator': 'sum', 'manual': False, 'readonly': True, 'required': False,
        #                         'searchable': False, 'sortable': False, 'store': False, 'string': 'Reordering Min Qty'},
        #  'reordering_max_qty': {'type': 'float', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                         'group_operator': 'sum', 'manual': False, 'readonly': True, 'required': False,
        #                         'searchable': False, 'sortable': False, 'store': False, 'string': 'Reordering Max Qty'},
        #  'route_from_categ_ids': {'type': 'many2many', 'change_default': False, 'company_dependent': False,
        #                           'context': {}, 'depends': ('categ_id.total_route_ids',), 'domain': [],
        #                           'manual': False, 'readonly': False, 'related': ('categ_id', 'total_route_ids'),
        #                           'relation': 'stock.location.route', 'required': False, 'searchable': False,
        #                           'sortable': False, 'store': False, 'string': 'Category Routes'},
        #  'cost_method': {'type': 'selection', 'change_default': False, 'company_dependent': False,
        #                  'depends': ('categ_id.property_cost_method',),
        #                  'help': 'Standard Price: The products are valued at their standard cost defined on the product.\n        Average Cost (AVCO): The products are valued at weighted average cost.\n        First In First Out (FIFO): The products are valued supposing those that enter the company first will also leave it first.\n        ',
        #                  'manual': False, 'readonly': True, 'related': ('categ_id', 'property_cost_method'),
        #                  'required': False, 'searchable': True,
        #                  'selection': [('standard', 'Standard Price'), ('fifo', 'First In First Out (FIFO)'),
        #                                ('average', 'Average Cost (AVCO)')], 'sortable': False, 'store': False,
        #                  'string': 'Costing Method'},
        #  'valuation': {'type': 'selection', 'change_default': False, 'company_dependent': False,
        #                'depends': ('categ_id.property_valuation',),
        #                'help': 'Manual: The accounting entries to value the inventory are not posted automatically.\n        Automated: An accounting entry is automatically created to value the inventory when a product enters or leaves the company.\n        ',
        #                'manual': False, 'readonly': True, 'related': ('categ_id', 'property_valuation'),
        #                'required': False, 'searchable': True,
        #                'selection': [('manual_periodic', 'Manual'), ('real_time', 'Automated')], 'sortable': False,
        #                'store': False, 'string': 'Inventory Valuation'},
        #  'service_type': {'type': 'selection', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                   'help': 'Manually set quantities on order: Invoice based on the manually entered quantity, without creating an analytic account.\nTimesheets on contract: Invoice based on the tracked hours on the related timesheet.\nCreate a task and track hours: Create a task on the sales order validation and track the work hours.',
        #                   'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                   'selection': [('manual', 'Manually set quantities on order')], 'sortable': True,
        #                   'store': True, 'string': 'Track Service'},
        #  'sale_line_warn': {'type': 'selection', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                     'help': 'Selecting the "Warning" option will notify user with the message, Selecting "Blocking Message" will throw an exception with the message and block the flow. The Message has to be written in the next field.',
        #                     'manual': False, 'readonly': False, 'required': True, 'searchable': True,
        #                     'selection': [('no-message', 'No Message'), ('warning', 'Warning'),
        #                                   ('block', 'Blocking Message')], 'sortable': True, 'store': True,
        #                     'string': 'Sales Order Line'},
        #  'sale_line_warn_msg': {'type': 'text', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                         'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                         'sortable': True, 'store': True, 'string': 'Message for Sales Order Line',
        #                         'translate': False},
        #  'expense_policy': {'type': 'selection', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                     'help': 'Expenses and vendor bills can be re-invoiced to a customer.With this option, a validated expense can be re-invoice to a customer at its cost or sales price.',
        #                     'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                     'selection': [('no', 'No'), ('cost', 'At cost'), ('sales_price', 'Sales price')],
        #                     'sortable': True, 'store': True, 'string': 'Re-Invoice Expenses'},
        #  'visible_expense_policy': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                             'depends': ('name',), 'manual': False, 'readonly': True, 'required': False,
        #                             'searchable': False, 'sortable': False, 'store': False,
        #                             'string': 'Re-Invoice Policy visible'},
        #  'sales_count': {'type': 'float', 'change_default': False, 'company_dependent': False,
        #                  'depends': ('product_variant_ids.sales_count',), 'group_operator': 'sum', 'manual': False,
        #                  'readonly': True, 'required': False, 'searchable': False, 'sortable': False, 'store': False,
        #                  'string': 'Sold'},
        #  'visible_qty_configurator': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                               'depends': (), 'manual': False, 'readonly': True, 'required': False,
        #                               'searchable': False, 'sortable': False, 'store': False,
        #                               'string': 'Quantity visible in configurator'},
        #  'invoice_policy': {'type': 'selection', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                     'help': 'Ordered Quantity: Invoice quantities ordered by the customer.\nDelivered Quantity: Invoice quantities delivered to the customer.',
        #                     'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                     'selection': [('order', 'Ordered quantities'), ('delivery', 'Delivered quantities')],
        #                     'sortable': True, 'store': True, 'string': 'Invoicing Policy'},
        #  'image_1920': {'type': 'binary', 'attachment': True, 'change_default': False, 'company_dependent': False,
        #                 'depends': (), 'manual': False, 'readonly': False, 'required': False, 'searchable': True,
        #                 'sortable': False, 'store': True, 'string': 'Image'},
        #  'image_1024': {'type': 'binary', 'attachment': True, 'change_default': False, 'company_dependent': False,
        #                 'depends': ('image_1920',), 'manual': False, 'readonly': True, 'related': ('image_1920',),
        #                 'required': False, 'searchable': True, 'sortable': False, 'store': True,
        #                 'string': 'Image 1024'},
        #  'image_512': {'type': 'binary', 'attachment': True, 'change_default': False, 'company_dependent': False,
        #                'depends': ('image_1920',), 'manual': False, 'readonly': True, 'related': ('image_1920',),
        #                'required': False, 'searchable': True, 'sortable': False, 'store': True, 'string': 'Image 512'},
        #  'image_256': {'type': 'binary', 'attachment': True, 'change_default': False, 'company_dependent': False,
        #                'depends': ('image_1920',), 'manual': False, 'readonly': True, 'related': ('image_1920',),
        #                'required': False, 'searchable': True, 'sortable': False, 'store': True, 'string': 'Image 256'},
        #  'image_128': {'type': 'binary', 'attachment': True, 'change_default': False, 'company_dependent': False,
        #                'depends': ('image_1920',), 'manual': False, 'readonly': True, 'related': ('image_1920',),
        #                'required': False, 'searchable': True, 'sortable': False, 'store': True, 'string': 'Image 128'},
        #  'activity_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                   'depends': (), 'domain': [], 'groups': 'base.group_user', 'manual': False, 'readonly': False,
        #                   'relation': 'mail.activity', 'relation_field': 'res_id', 'required': False,
        #                   'searchable': True, 'sortable': False, 'store': True, 'string': 'Activities'},
        #  'activity_state': {'type': 'selection', 'change_default': False, 'company_dependent': False,
        #                     'depends': ('activity_ids.state',), 'groups': 'base.group_user',
        #                     'help': 'Status based on activities\nOverdue: Due date is already passed\nToday: Activity date is today\nPlanned: Future activities.',
        #                     'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                     'selection': [('overdue', 'Overdue'), ('today', 'Today'), ('planned', 'Planned')],
        #                     'sortable': False, 'store': False, 'string': 'Activity State'},
        #  'activity_user_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                       'depends': ('activity_ids.user_id',), 'domain': [], 'groups': 'base.group_user',
        #                       'manual': False, 'readonly': False, 'related': ('activity_ids', 'user_id'),
        #                       'relation': 'res.users', 'required': False, 'searchable': True, 'sortable': False,
        #                       'store': False, 'string': 'Responsible User'},
        #  'activity_type_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                       'depends': ('activity_ids.activity_type_id',),
        #                       'domain': "['|', ('res_model_id', '=', False), ('res_model_id', '=', res_model_id)]",
        #                       'groups': 'base.group_user', 'manual': False, 'readonly': False,
        #                       'related': ('activity_ids', 'activity_type_id'), 'relation': 'mail.activity.type',
        #                       'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                       'string': 'Next Activity Type'},
        #  'activity_type_icon': {'type': 'char', 'change_default': False, 'company_dependent': False,
        #                         'depends': ('activity_ids.icon',), 'help': 'Font awesome icon e.g. fa-tasks',
        #                         'manual': False, 'readonly': True, 'related': ('activity_ids', 'icon'),
        #                         'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                         'string': 'Activity Type Icon', 'translate': False, 'trim': True},
        #  'activity_date_deadline': {'type': 'date', 'change_default': False, 'company_dependent': False,
        #                             'depends': ('activity_ids.date_deadline',), 'groups': 'base.group_user',
        #                             'manual': False, 'readonly': True, 'required': False, 'searchable': True,
        #                             'sortable': False, 'store': False, 'string': 'Next Activity Deadline'},
        #  'my_activity_date_deadline': {'type': 'date', 'change_default': False, 'company_dependent': False,
        #                                'depends': ('activity_ids.date_deadline', 'activity_ids.user_id'),
        #                                'groups': 'base.group_user', 'manual': False, 'readonly': True,
        #                                'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                                'string': 'My Activity Deadline'},
        #  'activity_summary': {'type': 'char', 'change_default': False, 'company_dependent': False,
        #                       'depends': ('activity_ids.summary',), 'groups': 'base.group_user', 'manual': False,
        #                       'readonly': False, 'related': ('activity_ids', 'summary'), 'required': False,
        #                       'searchable': True, 'sortable': False, 'store': False, 'string': 'Next Activity Summary',
        #                       'translate': False, 'trim': True},
        #  'activity_exception_decoration': {'type': 'selection', 'change_default': False, 'company_dependent': False,
        #                                    'depends': ('activity_ids.activity_type_id.decoration_type',
        #                                                'activity_ids.activity_type_id.icon'),
        #                                    'help': 'Type of the exception activity on record.', 'manual': False,
        #                                    'readonly': True, 'required': False, 'searchable': True,
        #                                    'selection': [('warning', 'Alert'), ('danger', 'Error')], 'sortable': False,
        #                                    'store': False, 'string': 'Activity Exception Decoration'},
        #  'activity_exception_icon': {'type': 'char', 'change_default': False, 'company_dependent': False, 'depends': (
        #  'activity_ids.activity_type_id.decoration_type', 'activity_ids.activity_type_id.icon'),
        #                              'help': 'Icon to indicate an exception activity.', 'manual': False,
        #                              'readonly': True, 'required': False, 'searchable': False, 'sortable': False,
        #                              'store': False, 'string': 'Icon', 'translate': False, 'trim': True},
        #  'message_is_follower': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                          'depends': ('message_follower_ids',), 'manual': False, 'readonly': True,
        #                          'required': False, 'searchable': True, 'sortable': False, 'store': False,
        #                          'string': 'Is Follower'},
        #  'message_follower_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False,
        #                           'context': {}, 'depends': (), 'domain': [], 'groups': 'base.group_user',
        #                           'manual': False, 'readonly': False, 'relation': 'mail.followers',
        #                           'relation_field': 'res_id', 'required': False, 'searchable': True, 'sortable': False,
        #                           'store': True, 'string': 'Followers'},
        #  'message_partner_ids': {'type': 'many2many', 'change_default': False, 'company_dependent': False,
        #                          'context': {}, 'depends': ('message_follower_ids',), 'domain': [],
        #                          'groups': 'base.group_user', 'manual': False, 'readonly': True,
        #                          'relation': 'res.partner', 'required': False, 'searchable': True, 'sortable': False,
        #                          'store': False, 'string': 'Followers (Partners)'},
        #  'message_channel_ids': {'type': 'many2many', 'change_default': False, 'company_dependent': False,
        #                          'context': {}, 'depends': ('message_follower_ids',), 'domain': [],
        #                          'groups': 'base.group_user', 'manual': False, 'readonly': True,
        #                          'relation': 'mail.channel', 'required': False, 'searchable': True, 'sortable': False,
        #                          'store': False, 'string': 'Followers (Channels)'},
        #  'message_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                  'depends': (), 'domain': [('message_type', '!=', 'user_notification')], 'manual': False,
        #                  'readonly': False, 'relation': 'mail.message', 'relation_field': 'res_id', 'required': False,
        #                  'searchable': True, 'sortable': False, 'store': True, 'string': 'Messages'},
        #  'message_unread': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                     'help': 'If checked, new messages require your attention.', 'manual': False,
        #                     'readonly': True, 'required': False, 'searchable': False, 'sortable': False, 'store': False,
        #                     'string': 'Unread Messages'},
        #  'message_unread_counter': {'type': 'integer', 'change_default': False, 'company_dependent': False,
        #                             'depends': (), 'group_operator': 'sum', 'help': 'Number of unread messages',
        #                             'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                             'sortable': False, 'store': False, 'string': 'Unread Messages Counter'},
        #  'message_needaction': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                         'help': 'If checked, new messages require your attention.', 'manual': False,
        #                         'readonly': True, 'required': False, 'searchable': True, 'sortable': False,
        #                         'store': False, 'string': 'Action Needed'},
        #  'message_needaction_counter': {'type': 'integer', 'change_default': False, 'company_dependent': False,
        #                                 'depends': (), 'group_operator': 'sum',
        #                                 'help': 'Number of messages which requires an action', 'manual': False,
        #                                 'readonly': True, 'required': False, 'searchable': False, 'sortable': False,
        #                                 'store': False, 'string': 'Number of Actions'},
        #  'message_has_error': {'type': 'boolean', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                        'help': 'If checked, some messages have a delivery error.', 'manual': False,
        #                        'readonly': True, 'required': False, 'searchable': True, 'sortable': False,
        #                        'store': False, 'string': 'Message Delivery error'},
        #  'message_has_error_counter': {'type': 'integer', 'change_default': False, 'company_dependent': False,
        #                                'depends': (), 'group_operator': 'sum',
        #                                'help': 'Number of messages with delivery error', 'manual': False,
        #                                'readonly': True, 'required': False, 'searchable': False, 'sortable': False,
        #                                'store': False, 'string': 'Number of errors'},
        #  'message_attachment_count': {'type': 'integer', 'change_default': False, 'company_dependent': False,
        #                               'depends': (), 'group_operator': 'sum', 'groups': 'base.group_user',
        #                               'manual': False, 'readonly': True, 'required': False, 'searchable': False,
        #                               'sortable': False, 'store': False, 'string': 'Attachment Count'},
        #  'message_main_attachment_id': {'type': 'many2one', 'change_default': False, 'company_dependent': False,
        #                                 'context': {}, 'depends': (), 'domain': [], 'manual': False, 'readonly': False,
        #                                 'relation': 'ir.attachment', 'required': False, 'searchable': True,
        #                                 'sortable': True, 'store': True, 'string': 'Main Attachment'},
        #  'website_message_ids': {'type': 'one2many', 'change_default': False, 'company_dependent': False, 'context': {},
        #                          'depends': (),
        #                          'domain': [('model', '=', 'product.template'), '|', ('message_type', '=', 'comment'),
        #                                     ('message_type', '=', 'email')], 'help': 'Website communication history',
        #                          'manual': False, 'readonly': False, 'relation': 'mail.message',
        #                          'relation_field': 'res_id', 'required': False, 'searchable': True, 'sortable': False,
        #                          'store': True, 'string': 'Website Messages'},
        #  'message_has_sms_error': {'type': 'boolean', 'change_default': False, 'company_dependent': False,
        #                            'depends': (), 'help': 'If checked, some messages have a delivery error.',
        #                            'manual': False, 'readonly': True, 'required': False, 'searchable': True,
        #                            'sortable': False, 'store': False, 'string': 'SMS Delivery error'},
        #  'id': {'type': 'integer', 'change_default': False, 'company_dependent': False, 'depends': (), 'manual': False,
        #         'readonly': True, 'required': False, 'searchable': True, 'sortable': True, 'store': True,
        #         'string': 'ID'},
        #  'display_name': {'type': 'char', 'change_default': False, 'company_dependent': False, 'depends': ('name',),
        #                   'manual': False, 'readonly': True, 'required': False, 'searchable': False, 'sortable': False,
        #                   'store': False, 'string': 'Display Name', 'translate': False, 'trim': True},
        #  'create_uid': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                 'depends': (), 'domain': [], 'manual': False, 'readonly': True, 'relation': 'res.users',
        #                 'required': False, 'searchable': True, 'sortable': True, 'store': True, 'string': 'Created by'},
        #  'create_date': {'type': 'datetime', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                  'manual': False, 'readonly': True, 'required': False, 'searchable': True, 'sortable': True,
        #                  'store': True, 'string': 'Created on'},
        #  'write_uid': {'type': 'many2one', 'change_default': False, 'company_dependent': False, 'context': {},
        #                'depends': (), 'domain': [], 'manual': False, 'readonly': True, 'relation': 'res.users',
        #                'required': False, 'searchable': True, 'sortable': True, 'store': True,
        #                'string': 'Last Updated by'},
        #  'write_date': {'type': 'datetime', 'change_default': False, 'company_dependent': False, 'depends': (),
        #                 'manual': False, 'readonly': True, 'required': False, 'searchable': True, 'sortable': True,
        #                 'store': True, 'string': 'Last Updated on'},
        #  '__last_update': {'type': 'datetime', 'change_default': False, 'company_dependent': False,
        #                    'depends': ('create_date', 'write_date'), 'manual': False, 'readonly': True,
        #                    'required': False, 'searchable': False, 'sortable': False, 'store': False,
        #                    'string': 'Last Modified on'}}
        #
        #
